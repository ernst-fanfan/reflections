How did viewing a diff between two versions of a file help you see the bug that was introduced?
It help isolate the parts I changed.
Thus reducing the number of lines I had to review.
Isolation reduces debug time always.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Old versions give you the capability to compare in order to debug.
Available Old versions makes it easy to revert to them if an update fails.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
A team leader can set and adjust commit protocols according to what works for the project.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
The target of the version control system determines their behavior. 
Google docs' targets the document itself as a singular project while git targets the sum of the documents in a project. In simpler terms google doc talors to the students and general office worker while guit targets a programer. 

How can you use the commands git log and git diff to view the history of files?
Git log lets you view the commits and git diff compares the different versions.

How might using version control make you more confident to make changes that could break something?
Very confident because I can always go back compare ans Isolate the bug inorder to fix it.

Now that you have your workspace set up, what do you want to try using Git for?
I would like to use it for version control.